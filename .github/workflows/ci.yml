name: CI

# Avoid running multiple jobs for the same branch
# in case of updates.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Run on pull requests and push events to specific branches only
on:
  pull_request:
    branches:
      - fcc2
  push:
    branches:
      - fcc2


jobs:
  # Style Checking: Linux and latest Python version only.
  check_style:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Check for changes only on files changed by the PR/push
    - uses: trilom/file-changes-action@v1.2.4
      with:
        # Creates 'files.txt' by default
        output: ' '
        fileOutput: ' '

    # Cache CI packages
    - uses: actions/cache@v2
      id: cache-precommit
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-precommit-hooks-v2-${{ hashFiles('**/.pre-commit-config.yaml') }}

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Installing pre-commit
      run: |
        python -m pip install pre-commit

    - name: Installing pre-commit hooks (cached)
      if: steps.cache-precommit.outputs.cache-hit != 'true'
      run: |
        pre-commit install --install-hooks

    - name: Run style checking using pre-commit
      run: |
        pre-commit run --files $( cat ${HOME}/files.txt )
  
  run_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r dev-requirements.txt

      - name: Run test suite with pytest
        run: |
          pytest -v